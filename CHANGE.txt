
2023-04-06
  Chrome 61+, Firefox 55+, Opera 48+, ES2018

  - z-data.min.es2015.js
    Chrome 49+, Firefox 44+, Opera 36+, iOS 10+, Android 7+
  - z-data.min.all.js
    Chrome 49+, Firefox 47+, Opera 36+, iOS 10+, Android 7+
  - z-data.min.all.es5.js
    Chrome 49+, Firefox 43+, Opera 36+, iOS 10+, Android 7+

2023-03-31
  * z-data.min.all.es5.js
    Chrome 49+, Firefox 43+, Opera 36+, iOS 10+, Android 6+

2023-03-29
  * z-data.min.all.js for es2015 (es6)
    Chrome 54+, Firefox 50+, Opera 41+, iOS 10+, Android 7+

2022-11-06
  * setAttrs.fn()
    + , ps.k ? nil : 1
      supports z-d- inner closure function

2022-11-05
  * tryEval()
    exp && ...
  * setAttrs.fn()
    + , ps.k || (ps.e = nil)
      call only once (for z-d-...)

2022-10-30
  + custom directive, z-d-...=...
    * re_bind, re_attr, setAttrs()

2022-10-17
  * :! and .attr
    ps.A

2022-10-16
  + syntax sugar to .attr
    :!tag-attr  -> :tag-attr.attr
    ::!tag-attr -> ::tag-attr.attr

2022-10-15
  * goAnode()/146,+147
    support template in svg

2022-09-09
  + .deb(fn, ms), debounce

2022-08-13
  * fix @xxx.out

2022-08-03
  * fix bug for empty z-data file

2022-05-16
  * Object.keys(...).forEach -> for (...in...)

2022-05-07
  * cb.i --Date.now()-> Math.random()

2022-05-06
  * loadHTML()
    * fix for style local (ignore list)

2022-04-26
  * expand()
    * template use (else)
      DONT cache

2022-04-15
  + attr handler (ZData.ss(name, value))
    attr atomic css on demand
      <div m1 hover=m2 a-hover=m3 a^hover=m4 a+hover=m5px a~not-hover=m6pt after=m7 p8 mt9%></div>
  * setEvent()
    event this -> current element (from e.target)
  + atomic css rules

2022-04-11
  * setValue(), fix issue for .xxx-=yyy

2022-04-10
  * observe(), fix issue

2022-04-09
  * loadHTML() and start()
    load / start optimized
  * goFor()
    fix - key DUPLICATE !!!
  * goAnode() and setAttrs()
    fix - nodeCache[]

2022-04-08
  + $emit(el, name, detail)
  * liteProxy
    performance optimized

2022-04-06
  * ZData.ss(s) for style shorthand
    -> compile time

2022-04-05
  + ZData.ss(s) for style shorthand

2022-04-03
  * loadHTML()
    * fix bug for style local (ignore list)
      prefix with @, \d%

2022-04-02
  * loadHTML()
    insert HTML after all .js on load
    load js with ZData.get()

2022-03-28
  * z-data html module
    - remove z-data=$... support
    + export default {...} --replaced-> return {...}

2022-03-27
  * z-data expression
    can be a function expression
    * initComponent() and tryEval()
  + z-data html module (begin with z-data)
    * loadHTML()

2022-03-25
  * setAttrs().fn() for *

2022-03-19
  * function events
  fns: {
    fn($el) {
      event // the event ctx
      this // the event element
      $el // z-data root element
    }
  }

2022-03-12
  * z-json
    onStringify(), {} --changed-> new WeakMap()
    + json2css()

2022-03-11
  * z-json
    onStringify(), duplicate object ignored

2022-03-07
  * z-json
    + qs2json(), json2qs()

2022-03-04
  * liteProxy
    + proxy chain back again
    ! proxy chain + cbs
  * loadHTML()
    load script one by one

2022-03-03
  * liteProxy
    + delete data-aware
      delete obj[prop];

2022-03-01
  + z-pen\to-es2015.fun

2022-02-28
  * template use
    DONT cache
    * goIf(), expand()

2022-02-27
  * liteProxy
    * CHANGE proxy chain (proxy -> proxy... -> target) TO proxy handler.cs [cb1, cb2...]

2022-02-24
  * goNodes()
    * cbIf(args) -> cbIf(el)
  * goFor()
    + goNodes() before insert

2022-01-26
  * ES2018 => ES2015
  * { ...x, y, z: z } => Object.assign({}, x, {y , z: z})
    (\{)[\s\r\n]*\.\.\.([\w.]+),?\s*(([^{}]+|\{[^{}]+\})*\})
    ->
    Object.assign({},$2,$1$3)

  - z-data.min.es2015.js

    Chrome 54+, Firefox 50+, Opera 41+

2021-10-22
  * setAttrs(), dynamic props/attrs/events supported
    :*={...}
    :*.attr={...}
    @*={...}

2021-10-21
  * expand()
  * re_modifiers / setEvent()
    * .away -> .out
    - .super

2021-10-15
  * setValue()
    value: undefined -> ""

2021-10-12
  + unit to .number (input)

2021-09-28
  * fix bug for :: changed value not in vs[i] cache

2021-09-22
  * fix bug for key event (autocomplete list)

2021-09-15
  - remove :xxx.attr .bool
    :xxx.attr.bool -> :xxx.attr (removeAttribute when false)

2021-09-13
  * load z-comp (fix bug for fetch twice)

2021-09-12
  + .on(name, fn)
  + .call(name, args)

2021-09-10
  * remove z-data string (to el._z) after init
  * remove bind attrs after init

2021-09-09
  * loadHTML()
    replace scope of style for scoped [z-i...

2021-09-08~09
  * loadHTML()
    ignore scope style for scoped [z-i...

2021-09-08
  + modifier bool, for .attr modifier
    :xxx.attr.bool xxx is a boolean attribute

2021-09-05
  * loadHTML()
    <style @> DONT be scoped

2021-09-04~05
  - this.checked && -> v &&
  * template use
    seek the template (use selector) from the z-data comp and then to up z-data for extend template builtin

2021-09-02
  ! refactory code
    className -> classList

2021-08-27
  ! refactory code

2021-08-26
  * template use
    + support ${...}
    * selector (e.g.: #t1)

2021-07-04
  * manual
  + v1.0 released

2021-07-01
  + template use

2021-06-11~12
  * proxy to compatible with Vue
  * reactive with Vue
    Object.defineProperty(__vue__, prop, {
        set(newValue) {
            vthis._data[prop] = me.xxx = newValue;
        }
    });

2021-06-11
  * removeAttribute after compile

2021-06-10~11
  * loadHTML, check loaded script [src=...]

2021-06-09
  + style property
    --* -> setProperty

2021-06-04~05
  + .attr modifier
    * setValue()

2021-06-04
  * proxy
    detect proxy via cb.id and DONT new Proxy duplicate again !!!
  * key in for
    support [{name: 'key1', ...}] and {key1: {...}} both
      key=/^\d*$/.test(k)?field.name:k

2021-06-03
  * fix bug - if in for
    in if
      rename .last -> .fi
    in for
      rename .head -> .from
      rename .last -> .to

2021-06-01
  * browser compatible test and fixes
    Chrome 61+, Firefox 55+, Opera 48+
    - Polyfill.js 之后 (Element.prototype.getAttributeNames)
      Chrome 60+, Firefox 55+, Opera 47+

2021-05-31
  * browser compatible test and fixes
    Chrome 61+, Firefox 55+, Opera 48+

2021-05-28
  * minor fixes
    for debounce()
    for z-data error in script

2021-05-27
  * proxy to compatible with Vue

2021-05-26
  + ::checked=opt==this.value
    and add @change=this.checked&&(opt=this.value) automatically

2021-05-25
  * z-comp args
    use args.xxx instead of xxx
  * no log (for production environment)

2021-05-23
  cdn to jsdelivr
  + script module supported
    * loadHTML()
      + z-data=$xxx -> z-data=$xxx_...
      local names

2021-05-22
  * z-comp
    + z-comp args
  * loadHTML()
    + args

2021-05-21
  * variables
    - $event
      use "event" directly
    + this
      in event handler (and :: data bind)

2021-05-19
  * try catch {}
    + (e)

2021-05-14
  + ZData.nobserve (default false)
    no observe
  * observe()
    querySelector('[z-data]') in child sub tree

2021-05-06
  + z:// protocol add-in for z-comp
    ZData.get is the add-in Promise function

2021-05-05
  * minor fixes (key modifiers, @keyframes: 1%, 2%,... {})
  + mouse event modifiers (left, mid, right)
  * key event modifiers (>, =) as gt, eq

2021-05-04
  * loadHTML(), <style> module supported

2021-05-03
  * loadHTML(), <script src=... supported

2021-05-02
  + z-data studio (z-pen)

2021-05-01
  * performance optimized
  * fix bug - template for nesting for
    remove line:  env2.vs = Obj_values(env2.ps);
  + !style-name=string-value
    EQ
    #style-name=`string-value`

2021-04-30
  * fix bug - cache event closure
  * DOM observe optimized
  + shift, alt, ctrl, meta modifiers to *click event
  + z-comp 组件

2021-04-28
  + ZData.proxy()
  * template for bug (moveable)
  * env2 = {...env} bug, -> env2 = {...env, ps: {...env.ps}}
  + 双向绑定时 .trim / .number 修饰符

2021-04-27
  * template z-data 根节点支持
  z-data 和 z-template 分开立项

2021-04-26
  * template clone optimized
  * template for optimized

2021-04-25
  + template pre-compile

2021-04-23
  + ZData.loadHTML()

2021-04-22
  + DOM MutationObserver
  + TodoMVC
  .debounce 支持

2021-04-21
  z-data init 支持
  数据修改监控简单版支持
  $el.$data 支持

2021-04-20
  ::style.value=... 双向绑定支持
  ::css.value=...   双向绑定支持
  支持 input values <=> style values <=> data values
        属性编辑器         图形设计器         数据存储
  + el.fireChange() 支持
  $event 支持

2021-04-19
  .camel 支持
  @event 支持
  ::value=... 双向绑定支持
  $el 支持

2021-04-18
  性能优化告一段落 (插入 1万条数据维持在 五六百毫秒, 更新 一百多毫秒)
  写 CHANGE.txt
  写 README.cn.txt
  发布 z-data 0.1, z-template 1.0

2021-04-17
  继续优化性能 (尝试第三方案)

2021-04-16
  继续优化性能 (尝试第二方案)

2021-04-15
  优化性能 (超过 Alpine), 优化 minify 和 语法糖

2021-04-14
  支持 template if/else
  测性能 https://github.com/krausest/js-framework-benchmark

2021-04-13
  支持 class 和 style 简写语法
  z-data 和 z-template 分开启动

2021-04-12
  凌晨 1:59 提交第一份代码
  支持 template for, : 和 ${...} 属性名/值(包括文本内容)

2021-04-11
  z-data 项目启动
----------------
EOF
